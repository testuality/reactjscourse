{"version":3,"sources":["api/fetchWeather.js","App.js","index.js"],"names":["fetchWeather","town","a","console","log","axios","get","params","q","units","APPID","data","App","useState","weather","setWeather","inputRef","React","createRef","search","event","key","current","value","className","ref","type","placeholder","onKeyPress","main","name","sys","country","Math","round","temp","src","icon","alt","description","ReactDOM","render","document","getElementById"],"mappings":"0PAkBeA,EAZG,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACjBC,QAAQC,IAAI,mBADK,SAEIC,IAAMC,IALnB,kDAK4B,CAChCC,OAAQ,CACJC,EAAGP,EACHQ,MAAO,SACPC,MARI,sCAEK,uBAEVC,EAFU,EAEVA,KAFU,kBASVA,GATU,2CAAH,sDCsCHC,G,OAxCH,WAAO,IAAD,EAEYC,mBAAS,IAFrB,gCAGgBA,mBAAS,KAHzB,mBAGPC,EAHO,KAGEC,EAHF,KAKVC,EAAWC,IAAMC,YAEfC,EAAM,uCAAG,WAAOC,GAAP,eAAAlB,EAAA,yDACO,UAAdkB,EAAMC,IADC,gCAEYrB,EAAagB,EAASM,QAAQC,OAF1C,OAEDZ,EAFC,OAGPR,QAAQC,IAAIO,GACZI,EAAWJ,GAJJ,2CAAH,sDAQZ,OACI,sBAAKa,UAAU,iBAAf,UACI,uBACIC,IAAKT,EACLU,KAAK,OACLF,UAAU,SACVG,YAAY,YACZC,WAAYT,IACfL,GAAWA,EAAQe,MAChB,sBAAKL,UAAU,OAAf,UACI,sBAAKA,UAAU,YAAf,UACI,+BAAOV,EAAQgB,OACf,8BAAMhB,EAAQiB,IAAIC,aAEtB,sBAAKR,UAAU,YAAf,UAA4BS,KAAKC,MAAMpB,EAAQe,KAAKM,MAAM,2CAC1D,sBAAKX,UAAU,OAAf,UACI,qBAAKA,UAAU,YAAYY,IAAG,4CAAuCtB,EAAQA,QAAQ,GAAGuB,KAA1D,WAAyEC,IAAKxB,EAAQA,QAAQ,GAAGyB,cAC/H,4BAAIzB,EAAQA,QAAQ,GAAGyB,yBChC/CC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.06f4d9de.chunk.js","sourcesContent":["import { queryAllByAltText } from \"@testing-library/react\";\r\nimport axios from \"axios\";\r\n\r\nconst URL = \"https://api.openweathermap.org/data/2.5/weather\";\r\nconst API_KEY = \"3b5a3e331f6c41bd24d3736036cbacfd\";\r\n\r\nconst fetchWeather = async (town) => {\r\n    console.log(\"fetchWeather...\");\r\n    const {data} = await axios.get(URL, {\r\n        params: {\r\n            q: town,\r\n            units: \"metric\",\r\n            APPID: API_KEY\r\n        }\r\n    });\r\n    return data;\r\n}\r\n\r\nexport default fetchWeather;","import React, { useState } from \"react\";\r\nimport fetchWeather from \"./api/fetchWeather\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n\r\n    const [query, setQuery] = useState(\"\");\r\n    const [weather, setWeather] = useState({});\r\n\r\n    let inputRef = React.createRef();\r\n\r\n    const search = async (event) => {\r\n        if (event.key === \"Enter\") {\r\n            const data = await fetchWeather(inputRef.current.value);\r\n            console.log(data);\r\n            setWeather(data);\r\n           // inputRef.current.value = \"\";\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"main-container\">\r\n            <input\r\n                ref={inputRef}\r\n                type=\"text\"\r\n                className=\"search\"\r\n                placeholder=\"Search...\"\r\n                onKeyPress={search} />\r\n            {weather && weather.main && (\r\n                <div className=\"city\">\r\n                    <div className=\"city-name\">\r\n                        <span>{weather.name}</span>\r\n                        <sup>{weather.sys.country}</sup>\r\n                    </div>\r\n                    <div className=\"city-temp\">{Math.round(weather.main.temp)}<sup>&deg;C</sup></div>\r\n                    <div className=\"info\">\r\n                        <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description}/>\r\n                        <p>{weather.weather[0].description}</p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}