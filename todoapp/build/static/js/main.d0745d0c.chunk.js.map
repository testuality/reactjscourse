{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","type","value","inputText","onChange","event","setInputText","target","className","onClick","preventDefault","console","log","setTodos","todos","text","completed","id","Math","random","name","setStatus","Todo","todo","map","filter","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filteredHandler","saveLocalTodos","localStorage","getItem","setItem","JSON","stringify","parse","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0745d0c.chunk.js","sourcesContent":["import React , {Component} from \"react\";\r\n\r\nconst Form = (props) => {\r\n    \r\n\r\n    const inputTextHandler = (event) => {\r\n        props.setInputText(event.target.value);\r\n    };\r\n \r\n    const submitTodoHandler = (event) => {\r\n        event.preventDefault();\r\n        console.log(event.type);\r\n        if (props.inputText === \"\") return;\r\n\r\n        props.setTodos([...props.todos, {\r\n            text: props.inputText,\r\n            completed: false,\r\n            id: Math.random() * 1000\r\n        }]);\r\n        props.setInputText(\"\");\r\n    }\r\n\r\n    const statusHandler = (event) => {\r\n        props.setStatus(event.target.value);\r\n    }\r\n\r\n// onClick={submitTodoHandler}\r\n// \r\n    return (\r\n        <form>\r\n            <input type=\"text\" value={props.inputText} onChange={inputTextHandler}\r\n                className=\"todo-input\" \r\n                />\r\n            <button className=\"todo-button\" type=\"submit\" onClick={submitTodoHandler}>\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select name=\"todos\" className=\"filter-todo\" onChange={statusHandler}>\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nconst Todo = (props) => {\r\n\r\n    const deleteHandler = () => {\r\n        props.setTodos(props.todos.filter((todo) => {\r\n            return todo.id !== props.todo.id;\r\n        }));\r\n    };\r\n\r\n    const completeHandler = () => {\r\n        props.setTodos(props.todos.map((todo => {\r\n            if (todo.id === props.todo.id) {\r\n                todo.completed = !props.todo.completed;\r\n            }\r\n            return todo;\r\n        })));\r\n    };\r\n    //   \r\n    //     \r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todoItem ${props.todo.completed ? \"completed\" : \"\"}`}>{props.todo.text}\r\n            </li>\r\n                <button className=\"complete-btn\" onClick={completeHandler}>\r\n                    <i className=\"fas fa-check\"></i>\r\n                </button>\r\n                <button className=\"trash-btn\" onClick={deleteHandler}>\r\n                    <i className=\"fas fa-trash\"></i>\r\n                </button>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React, { Component } from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = (props) => {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {props.filteredTodos.map(todo => {\r\n                    return (<Todo key={todo.id}  todos={props.todos} todo={todo} setTodos={props.setTodos}/>);\r\n                })}\r\n\r\n\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  },[]);\n\n  useEffect(() => {\n    filteredHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  const filteredHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter(todo => {\n          return todo.completed;\n        }));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter(todo => {\n          return !todo.completed;\n        }));\n        break;\n      case \"all\":\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  const saveLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    }\n    else {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    }\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      setTodos([]);\n    }\n    else {\n      setTodos(JSON.parse(localStorage.getItem(\"todos\")));\n    }\n\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List {inputText} {todos.length}</h1>\n      </header>\n      <Form todos={todos} \n        inputText={inputText}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus} />\n      <TodoList status={status} \n        filteredTodos={filteredTodos}\n        todos={todos} setTodos={setTodos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}